{"version":3,"sources":["logo.svg","ZoomJoin.js","App.js","reportWebVitals.js","index.js","ZoomRoom.js"],"names":["ZoomJoin","App","useState","exact","path","component","ZoomRoom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById","crypto","require","apiKey","signature","location","query","match","queryString","parse","search","console","log","meetingNumber","pwd","apiSecret","role","Promise","res","rej","timestamp","Date","getTime","msg","Buffer","from","toString","hash","createHmac","update","digest","generateSignature","useEffect","showZoomDiv","ZoomMtg","setZoomJSLib","preLoadWasm","prepareJssdk","initiateMeeting","style","display","init","leaveUrl","isSupportAV","success","join","userName","userEmail","passWord","error","className"],"mappings":"mZAAe,I,YCkBAA,I,eCkBAC,MA7Bf,WAAgB,IAAD,EACyBC,oBAAS,GADlC,mBAEb,OAFa,UAkBX,aAfA,CAeA,gBAEI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWC,MACzC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,YCjBzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,UAAxB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,K,iCCnBA,+DAKMe,EAASC,EAAQ,KAcvB,IAAIC,EAAY,yBAKZC,EAAY,GAqDDnB,IAnDE,SAAC,GAAuB,IAAtBoB,EAAqB,EAArBA,SACXC,GADgC,EAAXC,MACbC,IAAYC,MAAMJ,EAASK,SACzCC,QAAQC,IAAIN,EAAMO,eAClBF,QAAQC,IAAIN,EAAMQ,KAtBpB,SAA2BX,EAAQY,EAAWF,EAAeG,GAC3D,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GAEvB,IAAMC,GAAY,IAAIC,MAAOC,UAAY,IACnCC,EAAOC,EAAOC,KAAKtB,EAASU,EAAgBO,EAAYJ,GAAMU,SAAS,UACvEC,EAAO1B,EAAO2B,WAAW,SAAUb,GAAWc,OAAON,GAAKO,OAAO,UAGvE,OAAOZ,EAFWM,EAAOC,KAAP,UAAetB,EAAf,YAAyBU,EAAzB,YAA0CO,EAA1C,YAAuDJ,EAAvD,YAA+DW,IAAQD,SAAS,cAkBpGK,CAAmB5B,EAXL,uCAWwBG,EAAMO,cAAe,GAAIxB,MAAK,SAAC6B,GACnEd,EAAYc,KAGdc,qBAAU,WACRC,IACAC,UAAQC,aAAa,mCAAoC,OACzDD,UAAQE,cACRF,UAAQG,eACRC,MACC,IAEH,IAAML,EAAc,WAClBlC,SAASC,eAAe,cAAcuC,MAAMC,QAAU,SAElDF,EAAkB,WACtBJ,UAAQO,KAAK,CACXC,SA3BU,wBA4BVC,aAAa,EACbC,QAAS,SAACA,GACRjC,QAAQC,IAAIgC,GAEZV,UAAQW,KAAK,CACXzC,UAAgBA,EAChB0C,SAjCM,SAkCN3C,OAAgBA,EAChB4C,UAlCM,wBAmCNlC,cAAgBP,EAAMO,cACtBmC,SAAgB1C,EAAMQ,IACtB8B,QAAS,SAACA,GACRjC,QAAQC,IAAIgC,IAEdK,MAAO,SAACA,GACNtC,QAAQC,IAAIqC,OAIlBA,MAAO,SAACA,GACNtC,QAAQC,IAAIqC,OAIlB,OACE,qBAAKC,UAAU,MAAf,qB","file":"static/js/main.23b4c706.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction ZoomJoin(test) {\n  const [joinMeeting, setJoinMeeting] = useState(false);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            회의가 종료되었습니다.\n          </p>\n        </header>\n    </div>\n  );\n}\n\nexport default ZoomJoin;\n","import logo from './logo.svg';\nimport './App.css';\nimport ZoomJoin  from './ZoomJoin';\nimport ZoomRoom  from './ZoomRoom';\nimport { Switch, Route, Router } from 'react-router-dom';\nimport { useState } from 'react';\n\nfunction App() {\n  const [joinMeeting, setJoinMeeting] = useState(false);\n  return (\n    /*\n    <div className=\"App\">\n      {joinMeeting ? (\n        <Zoom />\n      ) : (\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <button style={{border: '1px solid #ffffff'}} onClick={() => setJoinMeeting(true)}>Join Meeting</button>\n        </header>\n      )}\n    </div>\n    */\n    <div>\n      \n        <Switch>\n          <Route exact path=\"/:roomId?\" component={ZoomRoom} />\n          <Route exact path=\"/room/:roomId?\" component={ZoomRoom} />\n        </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/zoom-k\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import './ZoomRoom.css';\nimport { ZoomMtg } from '@zoomus/websdk';\nimport { useEffect } from 'react';\nimport queryString from 'query-string';\n\nconst crypto = require('crypto') // crypto comes with Node.js\n\nfunction generateSignature(apiKey, apiSecret, meetingNumber, role) {\n  return new Promise((res, rej) => {\n    // Prevent time sync issue between client signature generation and zoom \n    const timestamp = new Date().getTime() - 30000\n    const msg  = Buffer.from(apiKey + meetingNumber + timestamp + role).toString('base64')\n    const hash = crypto.createHmac('sha256', apiSecret).update(msg).digest('base64')\n    const signature = Buffer.from(`${apiKey}.${meetingNumber}.${timestamp}.${role}.${hash}`).toString('base64')\n\n    return res(signature);\n  });\n}\n// setup your signautre endpoint here: https://github.com/zoom/websdk-sample-signature-node.js\nvar apiKey    = 'XykCKrLwTey3_WSCiW96ag';\nvar apiSecret = 'dhBozo3a4lFanaBbxXBOcSNYylqh8BdvMtkP';\nvar leaveUrl  = 'http://localhost:3000';\nvar userName  = 'WebSDK';\nvar userEmail = 'com@globalcomms.co.kr';\nvar signature = '';\n\nconst ZoomRoom = ({location, match}) => {\n  const query = queryString.parse(location.search);\n  console.log(query.meetingNumber)\n  console.log(query.pwd)\n  //loading zoom lib before joining on component mounting\n  generateSignature( apiKey, apiSecret, query.meetingNumber, 0 ).then((res)=>{\n    signature = res;\n  });\n\n  useEffect(() => {\n    showZoomDiv();\n    ZoomMtg.setZoomJSLib('https://source.zoom.us/1.9.5/lib', '/av');\n    ZoomMtg.preLoadWasm();\n    ZoomMtg.prepareJssdk();\n    initiateMeeting();\n  }, []);\n\n  const showZoomDiv = () => {\n    document.getElementById('zmmtg-root').style.display = 'block';\n  }\n  const initiateMeeting = () => {\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      isSupportAV: true,\n      success: (success) => {\n        console.log(success)\n    \n        ZoomMtg.join({\n          signature     : signature,\n          userName      : userName,\n          apiKey        : apiKey,\n          userEmail     : userEmail,\n          meetingNumber : query.meetingNumber,\n          passWord      : query.pwd,\n          success: (success) => {\n            console.log(success)\n          },\n          error: (error) => {\n            console.log(error)\n          }\n        })\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    })\n  }\n  return (\n    <div className=\"App\">Zoom</div>\n  );\n}\nexport default ZoomRoom;"],"sourceRoot":""}